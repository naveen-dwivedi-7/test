final List<String> list = <String>['Device1', 'Device2'];
String dropdownValue = list.first;

class Homepage extends StatefulWidget {
  const Homepage({super.key});

  @override
  State<Homepage> createState() => _HomepageState();
}

class _HomepageState extends State<Homepage> {
  // List of items in our dropdown menu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          backgroundColor: Colors.green[900],
          title: const Text('Home'),
          centerTitle: true,
        ),
        drawer: const MainDrawer(),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              DropdownButton<String>(
                value: dropdownValue,
                icon: const Icon(Icons.arrow_downward),
                elevation: 5,
                style: const TextStyle(color: Colors.green),
                underline: Container(
                  height: 2,
                  color: Colors.green[900],
                ),
                onChanged: (String? value) {
                  // This is called when the user selects an item.
                  setState(() {
                    dropdownValue = value!;
                  });
                },
                items: list.map<DropdownMenuItem<String>>((String value) {
                  return DropdownMenuItem<String>(
                    value: value,
                    child: Text(value),
                  );
                }).toList(),
              ),
              const SizedBox(height: 25),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.fromLTRB(25.0, 25.0, 25.0, 25.0),
                    elevation: 2,
                    backgroundColor: Colors.green[900]),
                onPressed: () {
                  if (dropdownValue == list.first) {
                    Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const Homepage()),
                    );
                  } else {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                          builder: (context) => const Homepage2()),
                    );
                  }
                },
                child: const Text(
                  'Click to Show Devices',
                ),
              ),
              const SizedBox(height: 25),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.fromLTRB(45.0, 25.0, 45.0, 25.0),
                    elevation: 2,
                    backgroundColor: Colors.green[900]),
                onPressed: () {},
                child: const Text(
                  'ENTRY IN',
                ),
              ),
              const SizedBox(height: 25),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.fromLTRB(35.0, 25.0, 35.0, 25.0),
                    elevation: 2,
                    backgroundColor: Colors.green[900]),
                onPressed: () {},
                child: const Text(
                  'ENTRY OUT',
                ),
              ),
              const SizedBox(height: 25),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.fromLTRB(45.0, 25.0, 45.0, 25.0),
                    elevation: 2,
                    backgroundColor: Colors.green[900]),
                onPressed: () {},
                child: const Text(
                  'ENTRY IN',
                ),
              ),
              const SizedBox(height: 25),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.fromLTRB(35.0, 25.0, 35.0, 25.0),
                    elevation: 2,
                    backgroundColor: Colors.green[900]),
                onPressed: () {},
                child: const Text(
                  'ENTRY OUT',
                ),
              ),
            ],
          ),
        ));
  }
}
